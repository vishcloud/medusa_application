import { UpdateLineItemInCartWorkflowInputDTO } from "@medusajs/framework/types";
import { WorkflowData } from "@medusajs/framework/workflows-sdk";
export declare const updateLineItemInCartWorkflowId = "update-line-item-in-cart";
/**
 * This workflow updates a line item's details in a cart. You can update the line item's quantity, unit price, and more. This workflow is executed
 * by the [Update Line Item Store API Route](https://docs.medusajs.com/api/store#carts_postcartsidlineitemsline_id).
 *
 * You can use this workflow within your own customizations or custom workflows, allowing you to update a line item's details in your custom flows.
 *
 * @example
 * const { result } = await updateLineItemInCartWorkflow(container)
 * .run({
 *   input: {
 *     cart_id: "cart_123",
 *     item_id: "item_123",
 *     update: {
 *       quantity: 2
 *     }
 *   }
 * })
 *
 * @summary
 *
 * Update a cart's line item.
 *
 * @property hooks.validate - This hook is executed before all operations. You can consume this hook to perform any custom validation. If validation fails, you can throw an error to stop the workflow execution.
 */
export declare const updateLineItemInCartWorkflow: import("@medusajs/framework/workflows-sdk").ReturnWorkflow<UpdateLineItemInCartWorkflowInputDTO, undefined, import("@medusajs/framework/workflows-sdk").Hook<"validate", {
    input: WorkflowData<UpdateLineItemInCartWorkflowInputDTO>;
    cart: any;
}>[]>;
//# sourceMappingURL=update-line-item-in-cart.d.ts.map