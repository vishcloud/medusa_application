import { HttpTypes } from "@medusajs/framework/types";
/**
 * The products to group.
 */
export type GroupProductsForBatchStepInput = (HttpTypes.AdminCreateProduct & {
    /**
     * The ID of the product to update.
     */
    id?: string;
})[];
export type GroupProductsForBatchStepOutput = {
    /**
     * The products to create.
     */
    create: HttpTypes.AdminCreateProduct[];
    /**
     * The products to update.
     */
    update: (HttpTypes.AdminUpdateProduct & {
        id: string;
    })[];
};
export declare const groupProductsForBatchStepId = "group-products-for-batch";
/**
 * This step groups products to be created or updated.
 *
 * @example
 * const data = groupProductsForBatchStep([
 *   {
 *     id: "prod_123",
 *     title: "Shirt",
 *     options: [
 *       {
 *         title: "Size",
 *         values: ["S", "M", "L"]
 *       }
 *     ]
 *   },
 *   {
 *     title: "Pants",
 *     options: [
 *       {
 *         title: "Color",
 *         values: ["Red", "Blue"]
 *       }
 *     ],
 *     variants: [
 *       {
 *         title: "Red Pants",
 *         options: {
 *           Color: "Red"
 *         },
 *         prices: [
 *           {
 *             amount: 10,
 *             currency_code: "usd"
 *           }
 *         ]
 *       }
 *     ]
 *   }
 * ])
 */
export declare const groupProductsForBatchStep: import("@medusajs/framework/workflows-sdk").StepFunction<GroupProductsForBatchStepInput, GroupProductsForBatchStepOutput>;
//# sourceMappingURL=group-products-for-batch.d.ts.map